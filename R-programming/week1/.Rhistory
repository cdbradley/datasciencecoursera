a<-c(1:4)
barplot(a)
names(a)<-c("joe", "tom", "bob", "jen")
barplot(a)
a <- 1:64
matrix(a,8,8)
image(matrix(a,8,8))
available.packages()
clear
source("http://bioconductor.org/biocLite.R")
biocLite()
n
biocLite(c("GenomicFeatures", "AnnotationDbi"))
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
getwd()
dir()
x
x<-4
x
x
x<-list(foo=1:4,bar=0.6)
x
x[[1]]
x[["foo"]]
x[["bar"]]
m <- matrix(1:6,2,3)
m
m[2]
m[[2]]
pwd
read.csv(hw1_data.csv)
read.csv(hw1_data)
read.csv("hw1_data")
con <- read.csv(hw1_data, header = TRUE)
setwd("C:/Users/Colt/datasciencecoursera/R-programming/week1")
read.csv(hw1_data)
read.csv(hw1_data.csv)
ls
read.csv(hw1_data.csv)
read.csv("hw1_data")
read.csv("hw1_data.csv")
hwdata <-"hw1_data.csv"
read.csv(hwdata,nrows=1,skip=4)
data <-read.csv(hwdata)
data
data[["ozone"]]
data$Ozone
data$Ozone[47]
bar <-is.na(data$ozone)
bar
is.na(data)
is.na(data$ozone)
ozone<-data$Ozone
is.na(ozone)
table(is.na(ozone))
bar <- is.na(ozone)
bar
ozone[!bar]
clean <-ozone[!bar]
mean(clean)
new <- data[ozone>31]
new <- data["ozone">31]
new
new <- new["temp">90]
new
new["Solar.R"]
new[["Solar.R"]]
mean(new[["Solar.R"]])
,solar<-new[["Solar.R"]]
solar<-new[["Solar.R"]]
bar<-is.na(solar)
solar[!bar]
mean(solar[!bar])
data["month"==6]
data["month"=66]
data["month"=6]
data["Month"+6]
data["Month"=6]
data
data$Month
is.element(6,data$"sunspot.month")
data[["Month"=6]]
data[["Month"]]
data[["Month">3]]
data
data[["Month"<-6]]
data
data["Month"=6]
data["Month"==6]
data["Month">6]
data["month"<8]
data[["Month"<6]]
data["Month"]
data[["Month"]]
data[["Month">5]]
u <- data[["Month"]]=6
u <- data[["Month"]]==6
u
data[["Month"==u]]
data[["Month"=u]]
data[["Month"]][u]
data[u]
data[[u]]
data[[u]]
data[["Temp">90]]
data[["Temp"==44]]
data[["Month"=="6"]]
data[["Month"==6]]
data[["Month",x=6]]
data[["Month",x==6]]
data[which(month==6)]
data[which(Month==6)]
data
subset(data,"Month"==6)
subset(data,Month==6)
data[[Month==6]]
subset(data,Month==6)[["Temp"]]
mean(subset(data,Month==6)[["Temp"]])
max(subset(data,Month==5)[["Ozone"]])
max(subset(data,Month==5)[["Ozone"]])
subset(data,Month==5)[["Ozone"]]
ozone <-subset(data,Month==5)[["Ozone"]]
bar<-is.na(ozone)
ozone<-ozone[!bar]
max(ozone)
isntall.packages("swirl")
install.packages("swirl")
packageVersion("swirl")
librabry("swirl")
library("swirl")
rm(list=ls())
swirl()
5+7
x<- 5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0,10)
c(1, 2, 3, 4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls
ls()
list.files()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <-getwd()
dir.create(testdir)
dir.create()
dir.create(/testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("testdir.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.$")
file.path("mytest3.R")
file.path(folder1)
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", recursive = T)
dir.create(file.path("testdir2", "testdir3"), recursive = T)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(oldwd)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:
close
exit
`
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(0,30,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vec<1
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char,"Colt")
ny_name
my_name
paste(my_name, collapse=" ")
paste("Hello", "World", sep = " ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na()
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11, bar= 2, norf=NA)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
matrix(1:20,nrow=4,ncol=5)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8||6!=8&&&4>3.9
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical("twins","twins")
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
0
clear
clr
clr()
clear()
